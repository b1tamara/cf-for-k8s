#@ load("@ytt:yaml", "yaml")
#@ load("/namespaces.star", "system_namespace")
#@ load("/quarks-secret/quarks-secret.star", "quarks_secret_enabled")

#@ if quarks_secret_enabled():
#@ def uaa_client_credential_template(client_name):
oauth:
  #@yaml/text-templated-strings
  clients:
    (@= client_name @):
      secret: "{{.Values.client_credentials}}"
#@ end

#@ def uaa_client_credential(client_name, credential_reference):
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: #@ "uaa-templated-" + credential_reference
  namespace: #@ system_namespace()
spec:
  type: templatedconfig
  secretName: #@ "uaa-" + credential_reference
  request:
    templatedConfig:
      type: helm
      templates:
        client_credentials.yml: #@ yaml.encode(uaa_client_credential_template(client_name))
      values:
        client_credentials:
          name: #@ credential_reference
          key: "password"
#@ end

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-admin-client-credentials
  namespace: #@ system_namespace()
spec:
  type: password
  secretName: uaa-admin-client-credentials

--- #@ uaa_client_credential("cloud_controller_username_lookup", "cloud-controller-username-lookup-client-secret")
--- #@ uaa_client_credential("cf_api_controllers", "cf-api-controllers-client-secret")
--- #@ uaa_client_credential("cf_api_backup_metadata_generator", "cf-api-backup-metadata-generator-client-secret")
--- #@ uaa_client_credential("admin", "uaa-admin-client-credentials")

#@ end
